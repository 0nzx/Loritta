package com.mrpowergamerbr.loritta.commands.vanilla.`fun`

import com.mrpowergamerbr.loritta.Loritta
import com.mrpowergamerbr.loritta.commands.CommandBase
import com.mrpowergamerbr.loritta.commands.CommandCategory
import com.mrpowergamerbr.loritta.commands.CommandContext
import com.mrpowergamerbr.loritta.utils.getOrCreateWebhook
import com.mrpowergamerbr.temmiewebhook.DiscordMessage
import java.util.*

private val responses = Arrays.asList(
		"Vai incomodar outra pessoa, obrigado.",
		"NÃ£o sei, mas eu sei que eu moro lÃ¡ no Cambuci.",
		"Do jeito que eu vejo, sim.",
		"Hmmmm... ðŸ¤”",
		"NÃ£o posso falar sobre isso.",
		"NÃ£o.",
		"Sim.",
		"Eu responderia, mas nÃ£o quero ferir seus sentimentos.",
		"Provavelmente sim",
		"Provavelmente nÃ£o",
		"Minhas fontes dizem que sim",
		"Minhas fontes dizem que nÃ£o",
		"VocÃª pode acreditar nisso",
		"Minha resposta Ã© nÃ£o",
		"Minha resposta Ã© sim",
		"Do jeito que eu vejo, nÃ£o.",
		"Melhor nÃ£o falar isto para vocÃª agora...",
		"Sim, com certeza!",
		"TambÃ©m queria saber...",
		"A minha resposta nÃ£o importa, o que importa Ã© vocÃª seguir o seu coraÃ§Ã£o. ðŸ˜˜",
		"Talvez...",
		"Acho que sim.",
		"Acho que nÃ£o.",
		"Talvez sim.",
		"Talvez nÃ£o.",
		"Sim!",
		"NÃ£o!",
		"Â¯\\_(ãƒ„)_/Â¯")

class MagicBallCommand : CommandBase() {
	override fun getLabel(): String {
		return "vieirinha"
	}

	override fun getDescription(): String {
		return "Pergunte algo para o Vieirinha"
	}

	override fun getExample(): List<String> {
		return Arrays.asList("vocÃª me ama?")
	}

	override fun getCategory(): CommandCategory {
		return CommandCategory.FUN
	}

	override fun hasCommandFeedback(): Boolean {
		return false
	}

	override fun run(context: CommandContext) {
		if (context.args.isNotEmpty()) {
			val temmie = getOrCreateWebhook(context.event.textChannel, "Vieirinha")

			context.sendMessage(temmie, DiscordMessage.builder()
					.username("Vieirinha")
					.content(context.getAsMention(true) + responses[Loritta.random.nextInt(responses.size)])
					.avatarUrl("http://i.imgur.com/rRtHdti.png")
					.build())
		} else {
			context.explain()
		}
	}
}
