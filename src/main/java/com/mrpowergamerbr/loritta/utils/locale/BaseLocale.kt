package com.mrpowergamerbr.loritta.utils.locale

import com.mrpowergamerbr.loritta.utils.f
import mu.KotlinLogging

/**
 * Localization class, this is partly generated by the LocaleGenerator
 */
open class BaseLocale {
	companion object {
		@JvmStatic
		private val logger = KotlinLogging.logger {}
	}

	@Transient
	@Deprecated("Please use the inner classes")
	var strings = mutableMapOf<String, String>()
	@Transient
	var commands = Commands()
	@Transient
	var loritta = Loritta()

	@Deprecated("Please use the inner classes")
	operator fun get(key: String, vararg arguments: Any?): String {
		if (!strings.containsKey(key)) {
			logger.warn {"Missing translation key! $key" }
			return key
		}
		return strings[key]!!.f(*arguments)
	}

	// Generic
	lateinit var SHIP_valor90: List<String>

	lateinit var SHIP_valor80: List<String>

	lateinit var SHIP_valor70: List<String>

	lateinit var SHIP_valor60: List<String>

	lateinit var SHIP_valor50: List<String>

	lateinit var SHIP_valor40: List<String>

	lateinit var SHIP_valor30: List<String>

	lateinit var SHIP_valor20: List<String>

	lateinit var SHIP_valor10: List<String>

	lateinit var SHIP_valor0: List<String>

	class Loritta {
		lateinit var translationAuthors: List<String>
	}
	class Commands {
		lateinit var pleaseWaitCooldown: String
		lateinit var errorWhileExecutingCommand: String
		lateinit var cantUseInPrivate: String
		class Arguments {
			lateinit var text: String
		}
		var arguments = Arguments()

		class Ajuda {
			lateinit var errorWhileOpeningDm: String
		}
		var ajuda = Ajuda()

		class Vieirinha {
			lateinit var description: String
			lateinit var examples: List<String>
			lateinit var responses: List<String>
		}
		var vieirinha = Vieirinha()

	}
}